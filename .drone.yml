branches: [master, staging, release/*]

pipeline:

  clone:
    image: plugins/git
    debug: true


  # build on pull requests

  build:
    image: node:8.8-alpine
    environment:
      - BASE_URL="//talks.sourced.tech/"
    commands:
      - apk add --update make bash curl git gcc libc-dev libffi-dev
      - apk add --update gcc libc-dev libffi-dev zlib zlib-dev
      - apk add --update ruby ruby-dev ruby-json
      - "echo gem: --no-document >> ~/.gemrc"
      - gem install bundler
      - make build
    debug: true
    when:
      event: [pull_request]


  # deployment to staging environment

  build_stg:
    image: node:8.8-alpine
    environment:
      - BASE_URL="//talks-staging.srcd.run/"
    commands:
      - apk add --update make bash curl git gcc libc-dev libffi-dev
      - apk add --update gcc libc-dev libffi-dev zlib zlib-dev
      - apk add --update ruby ruby-dev ruby-json
      - "echo gem: --no-document >> ~/.gemrc"
      - gem install bundler
      - make build
    debug: true
    when:
      event: [push]
      branch: [staging]

  docker_stg:
    image: plugins/docker
    registry: quay.io
    repo: quay.io/srcd/talks
    secrets: [ docker_username, docker_password ]
    # workaround for bug https://github.com/kubernetes/helm/issues/1707
    tag: 'commit-${DRONE_COMMIT_SHA:0:7}'
    dockerfile: Dockerfile
    debug: true
    when:
      event: [push]
      branch: [staging]

  helm_deploy_stg:
    image: quay.io/ipedrazas/drone-helm
    skip_tls_verify: true
    chart: ./helm-charts/talks
    release: talks
    prefix: STG
    secrets: [ STG_API_SERVER, STG_KUBERNETES_TOKEN ]
    values: ingress.globalStaticIpName=talks-staging,ingress.hosts={talks-staging.srcd.run},image.tag=commit-${DRONE_COMMIT_SHA:0:7},nodeSelector."cloud\.google\.com/gke-nodepool"=default-pool
    tiller_ns: kube-system
    wait: true
    when:
      event: [push]
      branch: [staging]


  # deployment to production environment

  build_prod:
    image: node:8.8-alpine
    environment:
      - BASE_URL="//talks.sourced.tech/"
    commands:
      - apk add --update make bash curl git gcc libc-dev libffi-dev
      - apk add --update gcc libc-dev libffi-dev zlib zlib-dev
      - apk add --update ruby ruby-dev ruby-json
      - "echo gem: --no-document >> ~/.gemrc"
      - gem install bundler
      - make build
    debug: true
    when:
      event: [tag]

  docker_prod:
    image: plugins/docker
    registry: quay.io
    repo: quay.io/srcd/talks
    secrets: [ docker_username, docker_password ]
    tag: '${DRONE_TAG}'
    dockerfile: Dockerfile
    debug: true
    when:
      event: [tag]

  helm_deploy_prod:
    image: quay.io/ipedrazas/drone-helm
    skip_tls_verify: true
    chart: ./helm-charts/talks
    release: talks
    prefix: PROD
    secrets: [ PROD_API_SERVER, PROD_KUBERNETES_TOKEN ]
    values: ingress.globalStaticIpName=talks-production,ingress.hosts={talks.sourced.tech},image.tag=${DRONE_TAG},nodeSelector."cloud\.google\.com/gke-nodepool"=default-pool
    tiller_ns: kube-system
    wait: true
    when:
      event: [tag]
